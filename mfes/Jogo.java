//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-08 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "C:\\Users\\joao\\Desktop\\MFES-RTFS\\Jogo.rtf".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import java.util.Map;
import java.util.List;
import java.util.HashMap;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Record;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Jogo implements EvaluatePP {

// ***** VDMTOOLS START Name=jogador1 KEEP=NO
  private volatile Jogador jogador1 = null;
// ***** VDMTOOLS END Name=jogador1

// ***** VDMTOOLS START Name=jogador2 KEEP=NO
  private volatile Jogador jogador2 = null;
// ***** VDMTOOLS END Name=jogador2

// ***** VDMTOOLS START Name=tabuleiro KEEP=NO
  private volatile Tabuleiro tabuleiro = null;
// ***** VDMTOOLS END Name=tabuleiro

// ***** VDMTOOLS START Name=turn KEEP=NO
  private volatile Number turn = null;
// ***** VDMTOOLS END Name=turn

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=JogoSentinel KEEP=NO
  class JogoSentinel extends Sentinel {

    public final int Jogo = 0;

    public final int reset = 1;

    public final int jogada = 2;

    public final int getTurn = 3;

    public final int trocaTurn = 4;

    public final int decrementaPeca = 5;

    public final int validaTurnJogador = 6;

    public final int nr_functions = 7;


    public JogoSentinel () throws CGException {}


    public JogoSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=JogoSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new JogoSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Jogo KEEP=NO
  private void vdm_init_Jogo () {
    try {
      setSentinel();
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Jogo


// ***** VDMTOOLS START Name=Jogo KEEP=NO
  public Jogo () throws CGException {
    vdm_init_Jogo();
  }
// ***** VDMTOOLS END Name=Jogo


// ***** VDMTOOLS START Name=Jogo#3|Jogador|Jogador|Tabuleiro KEEP=NO
  public Jogo (final Jogador jg1, final Jogador jg2, final Tabuleiro tab) throws CGException {
    vdm_init_Jogo();
    jogador1 = (Jogador)UTIL.clone(jg1);
    jogador2 = (Jogador)UTIL.clone(jg2);
    tabuleiro = (Tabuleiro)UTIL.clone(tab);
    turn = new Integer(1);
  }
// ***** VDMTOOLS END Name=Jogo#3|Jogador|Jogador|Tabuleiro


// ***** VDMTOOLS START Name=trocaTurn KEEP=NO
  public void trocaTurn () throws CGException {
    sentinel.entering(((JogoSentinel)sentinel).trocaTurn);
    try {
      if (turn.intValue() == 1) 
        turn = new Integer(2);
      else 
        turn = new Integer(1);
    }
    finally {
      sentinel.leaving(((JogoSentinel)sentinel).trocaTurn);
    }
  }
// ***** VDMTOOLS END Name=trocaTurn


// ***** VDMTOOLS START Name=getTurn KEEP=NO
  public Number getTurn () throws CGException {
    sentinel.entering(((JogoSentinel)sentinel).getTurn);
    try {
      return turn;
    }
    finally {
      sentinel.leaving(((JogoSentinel)sentinel).getTurn);
    }
  }
// ***** VDMTOOLS END Name=getTurn


// ***** VDMTOOLS START Name=reset KEEP=NO
  public void reset () throws CGException {
    sentinel.entering(((JogoSentinel)sentinel).reset);
    try {
      jogador1 = new Jogador(new Integer(1));
      jogador2 = new Jogador(new Integer(2));
      tabuleiro = new Tabuleiro();
      turn = new Integer(1);
    }
    finally {
      sentinel.leaving(((JogoSentinel)sentinel).reset);
    }
  }
// ***** VDMTOOLS END Name=reset


// ***** VDMTOOLS START Name=jogada#2|List|List KEEP=NO
  public void jogada (final List origem, final List destino) throws CGException {
    sentinel.entering(((JogoSentinel)sentinel).jogada);
    try {
      if (!this.pre_jogada(origem, destino).booleanValue()) 
        UTIL.RunTime("Precondition failure in jogada");
      {
        Number control = new Integer(0);
        Boolean cond_3 = null;
        if ((cond_3 = jogador1.VerificaSeTemPeca(tabuleiro.getBoard().get(origem))).booleanValue()) 
          cond_3 = jogador2.VerificaSeTemPeca(tabuleiro.getBoard().get(destino));
        if (cond_3.booleanValue()) 
          control = new Integer(1);
        Boolean cond_13 = null;
        if ((cond_13 = jogador2.VerificaSeTemPeca(tabuleiro.getBoard().get(origem))).booleanValue()) 
          cond_13 = jogador1.VerificaSeTemPeca(tabuleiro.getBoard().get(destino));
        if (cond_13.booleanValue()) 
          control = new Integer(1);
        tabuleiro.jogada(origem, destino);
        Boolean cond_26 = null;
        Boolean var1_27 = null;
        if ((var1_27 = Boolean.valueOf(turn.intValue() == 1)).booleanValue()) 
          var1_27 = Boolean.valueOf(control.intValue() == 1);
        if ((cond_26 = var1_27).booleanValue()) 
          cond_26 = jogador1.VerificaSeTemPeca(tabuleiro.getBoard().get(destino));
        if (cond_26.booleanValue()) 
          decrementaPeca(jogador2);
        Boolean cond_40 = null;
        Boolean var1_41 = null;
        if ((var1_41 = Boolean.valueOf(turn.intValue() == 2)).booleanValue()) 
          var1_41 = Boolean.valueOf(control.intValue() == 1);
        if ((cond_40 = var1_41).booleanValue()) 
          cond_40 = jogador2.VerificaSeTemPeca(tabuleiro.getBoard().get(destino));
        if (cond_40.booleanValue()) 
          decrementaPeca(jogador1);
        trocaTurn();
      }
    }
    finally {
      sentinel.leaving(((JogoSentinel)sentinel).jogada);
    }
  }
// ***** VDMTOOLS END Name=jogada#2|List|List


// ***** VDMTOOLS START Name=pre_jogada#2|List|List KEEP=NO
  public Boolean pre_jogada (final List origem, final List destino) throws CGException {
    Boolean varRes_3 = null;
    Boolean var1_4 = null;
    if ((var1_4 = tabuleiro.validCoords(origem)).booleanValue()) 
      var1_4 = tabuleiro.validCoords(destino);
    if ((varRes_3 = var1_4).booleanValue()) 
      varRes_3 = validaTurnJogador(origem);
    return varRes_3;
  }
// ***** VDMTOOLS END Name=pre_jogada#2|List|List


// ***** VDMTOOLS START Name=validaTurnJogador#1|List KEEP=NO
  public Boolean validaTurnJogador (final List origem) throws CGException {
    sentinel.entering(((JogoSentinel)sentinel).validaTurnJogador);
    try {
      Object peca = tabuleiro.getBoard().get(origem);
      if (turn.intValue() == 1) 
        return jogador1.VerificaSeTemPeca(peca);
      if (turn.intValue() == 2) 
        return jogador2.VerificaSeTemPeca(peca);
      else 
        return Boolean.FALSE;
    }
    finally {
      sentinel.leaving(((JogoSentinel)sentinel).validaTurnJogador);
    }
  }
// ***** VDMTOOLS END Name=validaTurnJogador#1|List


// ***** VDMTOOLS START Name=decrementaPeca#1|Jogador KEEP=NO
  public void decrementaPeca (final Jogador jogador) throws CGException {
    sentinel.entering(((JogoSentinel)sentinel).decrementaPeca);
    try {
      jogador.decTotalPieces();
    }
    finally {
      sentinel.leaving(((JogoSentinel)sentinel).decrementaPeca);
    }
  }
// ***** VDMTOOLS END Name=decrementaPeca#1|Jogador

}
;
